package org.cisco.cmad.BloggingApp.Exception;

import javax.json.stream.JsonParsingException;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.Response.Status;
import javax.ws.rs.ext.ExceptionMapper;
import javax.ws.rs.ext.Provider;

import org.cisco.cmad.BloggingApp.api.ErrorMsg;
import org.cisco.cmad.BloggingApp.api.UserNotFoundException;

@Provider
@SuppressWarnings("serial")
public class BloggingAppExceptionMapper implements ExceptionMapper<Throwable> {

	ErrorMsg errormsg = new ErrorMsg();
	
	@Override
	
	public Response toResponse(Throwable exception) {
		exception.printStackTrace();
		
		if (exception instanceof UserNotFoundException) {
				errormsg.setErrormsg("Unknown USer");
				errormsg.setErrorcode(401);
				return Response.status(Status.UNAUTHORIZED).entity(errormsg).build();
		} else if (exception instanceof JsonParsingException) {
				errormsg.setErrormsg(exception.getMessage());
				errormsg.setErrorcode(500);
				return Response.status(Status.INTERNAL_SERVER_ERROR).entity(errormsg).build();
			
		} else {
				errormsg.setErrormsg(exception.getMessage());
				errormsg.setErrorcode(500);
				return Response.status(Status.INTERNAL_SERVER_ERROR).entity(errormsg).build();
		}
		
		
	}
	


}
